// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: weights.proto

#include "weights.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace gpt2 {
PROTOBUF_CONSTEXPR Weight_Plaintext::Weight_Plaintext(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Weight_PlaintextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Weight_PlaintextDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Weight_PlaintextDefaultTypeInternal() {}
  union {
    Weight_Plaintext _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Weight_PlaintextDefaultTypeInternal _Weight_Plaintext_default_instance_;
PROTOBUF_CONSTEXPR Weight::Weight(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.plaintexts_)*/{}
  , /*decltype(_impl_.dim_)*/{}
  , /*decltype(_impl_._dim_cached_byte_size_)*/{0}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct WeightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeightDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeightDefaultTypeInternal() {}
  union {
    Weight _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeightDefaultTypeInternal _Weight_default_instance_;
PROTOBUF_CONSTEXPR Weights_ValueEntry_DoNotUse::Weights_ValueEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Weights_ValueEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Weights_ValueEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Weights_ValueEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Weights_ValueEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Weights_ValueEntry_DoNotUseDefaultTypeInternal _Weights_ValueEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Weights::Weights(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WeightsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeightsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeightsDefaultTypeInternal() {}
  union {
    Weights _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeightsDefaultTypeInternal _Weights_default_instance_;
}  // namespace gpt2
static ::_pb::Metadata file_level_metadata_weights_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_weights_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_weights_2eproto = nullptr;

const uint32_t TableStruct_weights_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gpt2::Weight_Plaintext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gpt2::Weight_Plaintext, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::gpt2::Weight, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::gpt2::Weight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gpt2::Weight, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::gpt2::Weight, _impl_.plaintexts_),
  PROTOBUF_FIELD_OFFSET(::gpt2::Weight, _impl_.dim_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::gpt2::Weights_ValueEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::gpt2::Weights_ValueEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gpt2::Weights_ValueEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::gpt2::Weights_ValueEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gpt2::Weights, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gpt2::Weights, _impl_.value_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::gpt2::Weight_Plaintext)},
  { 7, 16, -1, sizeof(::gpt2::Weight)},
  { 19, 27, -1, sizeof(::gpt2::Weights_ValueEntry_DoNotUse)},
  { 29, -1, -1, sizeof(::gpt2::Weights)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::gpt2::_Weight_Plaintext_default_instance_._instance,
  &::gpt2::_Weight_default_instance_._instance,
  &::gpt2::_Weights_ValueEntry_DoNotUse_default_instance_._instance,
  &::gpt2::_Weights_default_instance_._instance,
};

const char descriptor_table_protodef_weights_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rweights.proto\022\004gpt2\"y\n\006Weight\022\021\n\004name\030"
  "\001 \001(\tH\000\210\001\001\022*\n\nplaintexts\030\002 \003(\0132\026.gpt2.We"
  "ight.Plaintext\022\013\n\003dim\030\003 \003(\005\032\032\n\tPlaintext"
  "\022\r\n\005value\030\001 \003(\002B\007\n\005_name\"n\n\007Weights\022\'\n\005v"
  "alue\030\001 \003(\0132\030.gpt2.Weights.ValueEntry\032:\n\n"
  "ValueEntry\022\013\n\003key\030\001 \001(\t\022\033\n\005value\030\002 \001(\0132\014"
  ".gpt2.Weight:\0028\001B\003\370\001\000b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_weights_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_weights_2eproto = {
    false, false, 269, descriptor_table_protodef_weights_2eproto,
    "weights.proto",
    &descriptor_table_weights_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_weights_2eproto::offsets,
    file_level_metadata_weights_2eproto, file_level_enum_descriptors_weights_2eproto,
    file_level_service_descriptors_weights_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_weights_2eproto_getter() {
  return &descriptor_table_weights_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_weights_2eproto(&descriptor_table_weights_2eproto);
namespace gpt2 {

// ===================================================================

class Weight_Plaintext::_Internal {
 public:
};

Weight_Plaintext::Weight_Plaintext(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gpt2.Weight.Plaintext)
}
Weight_Plaintext::Weight_Plaintext(const Weight_Plaintext& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Weight_Plaintext* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gpt2.Weight.Plaintext)
}

inline void Weight_Plaintext::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Weight_Plaintext::~Weight_Plaintext() {
  // @@protoc_insertion_point(destructor:gpt2.Weight.Plaintext)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Weight_Plaintext::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedField();
}

void Weight_Plaintext::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Weight_Plaintext::Clear() {
// @@protoc_insertion_point(message_clear_start:gpt2.Weight.Plaintext)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Weight_Plaintext::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Weight_Plaintext::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gpt2.Weight.Plaintext)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float value = 1;
  if (this->_internal_value_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gpt2.Weight.Plaintext)
  return target;
}

size_t Weight_Plaintext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gpt2.Weight.Plaintext)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float value = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_value_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Weight_Plaintext::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Weight_Plaintext::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Weight_Plaintext::GetClassData() const { return &_class_data_; }


void Weight_Plaintext::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Weight_Plaintext*>(&to_msg);
  auto& from = static_cast<const Weight_Plaintext&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gpt2.Weight.Plaintext)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Weight_Plaintext::CopyFrom(const Weight_Plaintext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gpt2.Weight.Plaintext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Weight_Plaintext::IsInitialized() const {
  return true;
}

void Weight_Plaintext::InternalSwap(Weight_Plaintext* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Weight_Plaintext::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_weights_2eproto_getter, &descriptor_table_weights_2eproto_once,
      file_level_metadata_weights_2eproto[0]);
}

// ===================================================================

class Weight::_Internal {
 public:
  using HasBits = decltype(std::declval<Weight>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Weight::Weight(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gpt2.Weight)
}
Weight::Weight(const Weight& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Weight* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.plaintexts_){from._impl_.plaintexts_}
    , decltype(_impl_.dim_){from._impl_.dim_}
    , /*decltype(_impl_._dim_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gpt2.Weight)
}

inline void Weight::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.plaintexts_){arena}
    , decltype(_impl_.dim_){arena}
    , /*decltype(_impl_._dim_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Weight::~Weight() {
  // @@protoc_insertion_point(destructor:gpt2.Weight)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Weight::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.plaintexts_.~RepeatedPtrField();
  _impl_.dim_.~RepeatedField();
  _impl_.name_.Destroy();
}

void Weight::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Weight::Clear() {
// @@protoc_insertion_point(message_clear_start:gpt2.Weight)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.plaintexts_.Clear();
  _impl_.dim_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Weight::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gpt2.Weight.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .gpt2.Weight.Plaintext plaintexts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_plaintexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 dim = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_dim(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_dim(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Weight::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gpt2.Weight)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gpt2.Weight.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .gpt2.Weight.Plaintext plaintexts = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_plaintexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_plaintexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int32 dim = 3;
  {
    int byte_size = _impl_._dim_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_dim(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gpt2.Weight)
  return target;
}

size_t Weight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gpt2.Weight)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gpt2.Weight.Plaintext plaintexts = 2;
  total_size += 1UL * this->_internal_plaintexts_size();
  for (const auto& msg : this->_impl_.plaintexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 dim = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.dim_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._dim_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Weight::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Weight::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Weight::GetClassData() const { return &_class_data_; }


void Weight::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Weight*>(&to_msg);
  auto& from = static_cast<const Weight&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gpt2.Weight)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.plaintexts_.MergeFrom(from._impl_.plaintexts_);
  _this->_impl_.dim_.MergeFrom(from._impl_.dim_);
  if (from._internal_has_name()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Weight::CopyFrom(const Weight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gpt2.Weight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Weight::IsInitialized() const {
  return true;
}

void Weight::InternalSwap(Weight* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.plaintexts_.InternalSwap(&other->_impl_.plaintexts_);
  _impl_.dim_.InternalSwap(&other->_impl_.dim_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Weight::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_weights_2eproto_getter, &descriptor_table_weights_2eproto_once,
      file_level_metadata_weights_2eproto[1]);
}

// ===================================================================

Weights_ValueEntry_DoNotUse::Weights_ValueEntry_DoNotUse() {}
Weights_ValueEntry_DoNotUse::Weights_ValueEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Weights_ValueEntry_DoNotUse::MergeFrom(const Weights_ValueEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Weights_ValueEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_weights_2eproto_getter, &descriptor_table_weights_2eproto_once,
      file_level_metadata_weights_2eproto[2]);
}

// ===================================================================

class Weights::_Internal {
 public:
};

Weights::Weights(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &Weights::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:gpt2.Weights)
}
Weights::Weights(const Weights& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Weights* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.value_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  // @@protoc_insertion_point(copy_constructor:gpt2.Weights)
}

inline void Weights::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.value_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Weights::~Weights() {
  // @@protoc_insertion_point(destructor:gpt2.Weights)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void Weights::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.Destruct();
  _impl_.value_.~MapField();
}

void Weights::ArenaDtor(void* object) {
  Weights* _this = reinterpret_cast< Weights* >(object);
  _this->_impl_.value_.Destruct();
}
void Weights::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Weights::Clear() {
// @@protoc_insertion_point(message_clear_start:gpt2.Weights)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Weights::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .gpt2.Weight> value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.value_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Weights::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gpt2.Weights)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .gpt2.Weight> value = 1;
  if (!this->_internal_value().empty()) {
    using MapType = ::_pb::Map<std::string, ::gpt2::Weight>;
    using WireHelper = Weights_ValueEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_value();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "gpt2.Weights.ValueEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gpt2.Weights)
  return target;
}

size_t Weights::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gpt2.Weights)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .gpt2.Weight> value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_value_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::gpt2::Weight >::const_iterator
      it = this->_internal_value().begin();
      it != this->_internal_value().end(); ++it) {
    total_size += Weights_ValueEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Weights::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Weights::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Weights::GetClassData() const { return &_class_data_; }


void Weights::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Weights*>(&to_msg);
  auto& from = static_cast<const Weights&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gpt2.Weights)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Weights::CopyFrom(const Weights& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gpt2.Weights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Weights::IsInitialized() const {
  return true;
}

void Weights::InternalSwap(Weights* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Weights::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_weights_2eproto_getter, &descriptor_table_weights_2eproto_once,
      file_level_metadata_weights_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace gpt2
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gpt2::Weight_Plaintext*
Arena::CreateMaybeMessage< ::gpt2::Weight_Plaintext >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gpt2::Weight_Plaintext >(arena);
}
template<> PROTOBUF_NOINLINE ::gpt2::Weight*
Arena::CreateMaybeMessage< ::gpt2::Weight >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gpt2::Weight >(arena);
}
template<> PROTOBUF_NOINLINE ::gpt2::Weights_ValueEntry_DoNotUse*
Arena::CreateMaybeMessage< ::gpt2::Weights_ValueEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gpt2::Weights_ValueEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::gpt2::Weights*
Arena::CreateMaybeMessage< ::gpt2::Weights >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gpt2::Weights >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
